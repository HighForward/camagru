{
  "{\"assumptions\":{},\"sourceRoot\":\"/app/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/app/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/app",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/app/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport mysql from 'mysql';\nlet app = express();\nimport usersRoute from './srcs/users/users-route';\nimport bodyParser from \"body-parser\";\nconst con = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n});\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected to MySQL\");\n});\nconst PORT = process.env.PORT || 4000;\napp.use(bodyParser.json());\napp.use('/users', usersRoute);\napp.get('/', (req, res) => {\n  return res.json({\n    success: \"Camagru API alive\"\n  });\n});\napp.listen(PORT, () => {\n  console.log(`Camagru API listening at http://localhost:${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwibXlzcWwiLCJhcHAiLCJ1c2Vyc1JvdXRlIiwiYm9keVBhcnNlciIsImNvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkRCX0hPU1QiLCJ1c2VyIiwiREJfVVNFUiIsInBhc3N3b3JkIiwiREJfUEFTU1dPUkQiLCJkYXRhYmFzZSIsIkRCX05BTUUiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsIlBPUlQiLCJ1c2UiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic3VjY2VzcyIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQixTQUFwQjtBQUNBLE9BQU9DLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxJQUFJQyxHQUFHLEdBQUdGLE9BQU8sRUFBakI7QUFDQSxPQUFPRyxVQUFQLE1BQXVCLDBCQUF2QjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsYUFBdkI7QUFFQSxNQUFNQyxHQUFHLEdBQUdKLEtBQUssQ0FBQ0ssZ0JBQU4sQ0FBdUI7QUFDL0JDLEVBQUFBLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BRGE7QUFFL0JDLEVBQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLE9BRmE7QUFHL0JDLEVBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFdBSFM7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPO0FBSlMsQ0FBdkIsQ0FBWjtBQU9BWCxHQUFHLENBQUNZLE9BQUosQ0FBWSxVQUFTQyxHQUFULEVBQWM7QUFDdEIsTUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDSCxDQUhEO0FBS0EsTUFBTUMsSUFBSSxHQUFHYixPQUFPLENBQUNDLEdBQVIsQ0FBWVksSUFBWixJQUFvQixJQUFqQztBQUVBbkIsR0FBRyxDQUFDb0IsR0FBSixDQUFRbEIsVUFBVSxDQUFDbUIsSUFBWCxFQUFSO0FBQ0FyQixHQUFHLENBQUNvQixHQUFKLENBQVEsUUFBUixFQUFrQm5CLFVBQWxCO0FBR0FELEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkIsU0FBT0EsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFBRUksSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBVCxDQUFQO0FBQ0gsQ0FGRDtBQUlBekIsR0FBRyxDQUFDMEIsTUFBSixDQUFXUCxJQUFYLEVBQWlCLE1BQU07QUFDbkJGLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDZDQUE0Q0MsSUFBSyxFQUE5RDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2FwcC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IG15c3FsIGZyb20gJ215c3FsJ1xubGV0IGFwcCA9IGV4cHJlc3MoKVxuaW1wb3J0IHVzZXJzUm91dGUgZnJvbSAnLi9zcmNzL3VzZXJzL3VzZXJzLXJvdXRlJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCJcblxuY29uc3QgY29uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCxcbiAgICB1c2VyOiBwcm9jZXNzLmVudi5EQl9VU0VSLFxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRVxufSk7XG5cbmNvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBNeVNRTFwiKTtcbn0pO1xuXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA0MDAwO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoJy91c2VycycsIHVzZXJzUm91dGUpXG5cblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IFwiQ2FtYWdydSBBUEkgYWxpdmVcIiB9KVxufSlcblxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYENhbWFncnUgQVBJIGxpc3RlbmluZyBhdCBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "mysql",
        "app",
        "usersRoute",
        "bodyParser",
        "con",
        "createConnection",
        "host",
        "process",
        "env",
        "DB_HOST",
        "user",
        "DB_USER",
        "password",
        "DB_PASSWORD",
        "database",
        "DB_NAME",
        "connect",
        "err",
        "console",
        "log",
        "PORT",
        "use",
        "json",
        "get",
        "req",
        "res",
        "success",
        "listen"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,GAAG,GAAGF,OAAO,EAAjB;AACA,OAAOG,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,gBAAN,CAAuB;AAC/BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADa;AAE/BC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFa;AAG/BC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,WAHS;AAI/BC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJS,CAAvB,CAAZ;AAOAX,GAAG,CAACY,OAAJ,CAAY,UAASC,GAAT,EAAc;AACtB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,CAHD;AAKA,MAAMC,IAAI,GAAGb,OAAO,CAACC,GAAR,CAAYY,IAAZ,IAAoB,IAAjC;AAEAnB,GAAG,CAACoB,GAAJ,CAAQlB,UAAU,CAACmB,IAAX,EAAR;AACArB,GAAG,CAACoB,GAAJ,CAAQ,QAAR,EAAkBnB,UAAlB;AAGAD,GAAG,CAACsB,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvB,SAAOA,GAAG,CAACH,IAAJ,CAAS;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAP;AACH,CAFD;AAIAzB,GAAG,CAAC0B,MAAJ,CAAWP,IAAX,EAAiB,MAAM;AACnBF,EAAAA,OAAO,CAACC,GAAR,CAAa,6CAA4CC,IAAK,EAA9D;AACH,CAFD",
      "sourceRoot": "/app/",
      "sourcesContent": [
        "import express from 'express'\nimport mysql from 'mysql'\nlet app = express()\nimport usersRoute from './srcs/users/users-route'\nimport bodyParser from \"body-parser\"\n\nconst con = mysql.createConnection({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME\n});\n\ncon.connect(function(err) {\n    if (err) throw err;\n    console.log(\"Connected to MySQL\");\n});\n\nconst PORT = process.env.PORT || 4000;\n\napp.use(bodyParser.json());\napp.use('/users', usersRoute)\n\n\napp.get('/', (req, res) => {\n    return res.json({ success: \"Camagru API alive\" })\n})\n\napp.listen(PORT, () => {\n    console.log(`Camagru API listening at http://localhost:${PORT}`)\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1627907717559
  }
}